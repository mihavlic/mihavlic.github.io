[{"id":0,"href":"/docs/intro/","title":"Introduction","section":"Docs","content":" Introduction # This project implements the dual contouring algorithm to extract triangle meshes from closed-form implicit surfaces and provides a nice Gui to manipulate and save the resulting model.\nAn implicit surface is a function \\(f(x, y, z)\\) , where \\(x\\) , \\(y\\) , and \\(z\\) represent a position in 3D space. By convention, if \\(f(x, y, z)\\) \u0026lt; 0, then that position is inside the shape; if it’s \u0026gt; 0, then that position is outside the shape; otherwise, it’s on the boundary of the shape.\nBuilding # You need recent graphics drivers (not hardware), Vulkan headers, rust, and a C++ compiler.\nArchlinux # sudo pacman -S vulkan-headers rust base-devel git clone https://github.com/mihavlic/function-renderer \u0026amp;\u0026amp; cd function-renderer cargo run Windows # download the Lunarg SDK install Rust somehow get MSVC, probably through the SDK git clone https://github.com/mihavlic/function-renderer \u0026amp;\u0026amp; cd function-renderer cargo run "},{"id":1,"href":"/docs/api/","title":"API Reference","section":"Docs","content":""},{"id":2,"href":"/docs/","title":"Docs","section":"","content":""},{"id":3,"href":"/docs/github/","title":"GitHub","section":"Docs","content":""}]